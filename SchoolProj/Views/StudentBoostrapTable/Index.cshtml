@model IEnumerable<SchoolProj.Models.Student>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<div class="form-group row">
    <div class="col-md-12">
        <button type="button" id="btnAddNewStudent" class="btn btn-success" onclick="getStudentForm(event)"><span class="glyphicon glyphicon-plus"></span> New Student</button>
    </div>
</div>

@Html.AntiForgeryToken()

<table id="studentGrid"
       data-toggle="table"
       data-url="@Url.Action("GetStudents", "StudentBoostrapTable")"
       data-query-params="queryParams"
       data-side-pagination="server"
       data-page-list="[5, 10, 20, 50]"
       data-pagination="true"
       data-sort-name="Name"
       data-sort-order="asc">
    <thead>
        <tr>
            <th data-field="Id" data-formatter="formatterEdit" data-align="center">Edit</th>
            <th data-field="Name" data-sortable="true">
                Name
            </th>
            <th data-field="Gender" data-sortable="true">
                Gender
            </th>
            <th data-field="RollNo" data-sortable="true">
                RollNo
            </th>
            <th data-field="Age" data-sortable="true">
                Age
            </th>
            <th data-field="PhoneNo" data-sortable="true">
                PhoneNo
            </th>
            <th data-field="Email" data-sortable="false">
                Email
            </th>
            <th data-field="Address" data-sortable="false">
                Address
            </th>
            <th data-field="Id" data-formatter="formatterDelete" data-align="center">Delete</th>
        </tr>
    </thead>
</table>

@section Scripts {
    @*<script src="~/Scripts/custom.js"></script>*@
    <script type="text/javascript">
    function queryParams(params) {
        var customParams = core.helpers.grid.getFiltersById('#studentGrid', params);
        // search
        var searchItems = [];
        customParams.SearchText = JSON.stringify(searchItems);
        return customParams;
    }

	function formatterDelete(value, row, index) {
		let link = '@Html.ActionLink(" ", "Delete", "StudentBoostrapTable", null,
					new { @class = "glyphicon glyphicon-trash text-danger", title = "Delete", onclick = "deleteStudent(event, data)" })'
		link = link.replace('data', value);
		return link;
	}

	function deleteStudent(event, data) {
		event.preventDefault();
		let url = $(event.target).attr('href');
        bootbox.confirm({
            size: "small",
            message: "Are you sure you want to delete?",
            callback: function (result) {
                if (result) {
                    let __RequestVerificationToken = $('input[name="__RequestVerificationToken"]').val();
                    $.ajax({
                        cache: false,
                        type: "POST",
                        url: url,
                        data: { id: data, __RequestVerificationToken: __RequestVerificationToken },
                        success: function (response) {
                            $('#modal').modal('hide');
                            if (response.success) {
                                bootbox.alert("Successfull Delete.");
                                $('#studentGrid').bootstrapTable('refresh');
                            }
                            else {
                                bootbox.alert("Could not delete, please try again.");
                            }
                        }
                    });
                }
            }
        });
	}

	function formatterEdit(value) {
		var link = '@Html.ActionLink(" ", "Edit", "StudentBoostrapTable", new { id = "data"},
                new { @class = "glyphicon glyphicon-pencil", title = "Edit" , onclick= "getStudentForm(event)" })';
		link = link.replace('data', value);
		return link;
    }

    function getStudentForm(event) {
		event.preventDefault();
		let url = $(event.target).attr('href') == undefined ?
			'@Url.Action("Create", "StudentBoostrapTable")' : $(event.target).attr('href');
        let title = $(event.target).attr('href') == undefined ? 'Add Student' : 'Edit Student';

		$.ajax({
			type: "GET",
			url: url,
			contentType: "application/json; charset=utf-8",
			dataType: "html",
			success: function (data) {
				if (data) {
					core.modal.document(
						title,
						data,
						null,
						function () { }
					);
				}
			},
			error: function (xhr, status, error) {
				console.log("error : " + error);
			}
		});
    }
    </script>
}